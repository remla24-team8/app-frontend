name: Model Service Build

on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [ published ]

permissions:
  packages: write
  contents: read

env:
  BASE_IMAGE: ghcr.io/remla24-team8/app-frontend

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor}}
          password: ${{ github.token }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Commit SHA_SHORT
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Get branch name for non-release main
        if: ${{ (github.event_name != 'release' || github.event.action != 'published') && github.event_name != 'pull_request' }}
        run: echo "BRANCH_NAME=$(git symbolic-ref --short HEAD)" >> $GITHUB_ENV
      - name: Get branch name for non-release PR
        if: ${{ (github.event_name != 'release' || github.event.action != 'published') && github.event_name == 'pull_request' }}
        run: echo "BRANCH_NAME=${{ github.head_ref }}" >> $GITHUB_ENV
      - name: Tag name
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        run: echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
      - name: Set image tag non-release
        if: ${{ github.event_name != 'release' || github.event.action != 'published' }}
        run: echo "IMAGE_TAG_FRONTEND=$BASE_IMAGE:$SHA_SHORT,$BASE_IMAGE:$BRANCH_NAME" >> $GITHUB_ENV
      - name: Set image tag release
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        run: echo "IMAGE_TAG_FRONTEND=$BASE_IMAGE:$SHA_SHORT,$BASE_IMAGE:$TAG,$BASE_IMAGE:latest" >> $GITHUB_ENV
      - name: Build and push FRONTEND
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          tags: ${{ env.IMAGE_TAG_FRONTEND }}
          cache-from: type=gha
          cache-to: type=gha, mode=max
          push: true
